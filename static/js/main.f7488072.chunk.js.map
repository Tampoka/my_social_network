{"version":3,"sources":["components/Nav/Nav.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.ts","components/Friends/Friends.tsx","components/Nav/Nav.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","hoc/withAuthRedirect.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/FormControls/FormControls.tsx","utils/validators/validators.ts","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","api/api.ts","utils/object-helpers.ts","redux/users-reducer.ts","common/Paginator/Paginator.tsx","assets/images/user.png","components/Users/User.tsx","components/Users/Users.tsx","assets/loader/Interwind-1.5s-367px.svg","common/Preloader/Preloader.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Profile/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","App.tsx","index.tsx","components/FormControls/FormControls.module.css","components/Friends/Friends.module.css","components/Header/Header.module.css","common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Friends","props","avatar","friends","map","f","activeClass","isOnline","s","active","className","src","img","alt","name","userName","id","avatarContainer","connect","state","sidebar","navContainer","nav","item","to","activeClassName","News","Music","Settings","ADD_MESSAGE","initialState","dialogs","messages","message","dialogsReducer","action","type","newMessage","mapStateToPropsForRedirect","isAuth","auth","DialogItem","path","dialog","Message","FormControl","meta","touched","error","children","hasError","formControl","Textarea","input","restProps","Input","createField","placeholder","component","validators","text","wrapperClass","fieldClass","Field","validate","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","maxLength10","minLength5","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsElements","dialogsPage","d","messagesElements","m","dialogItems","sendMessage","formData","addMessage","compose","dispatch","Component","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","follow","userId","post","unFollow","delete","profileAPI","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","acceptFollow","acceptUnFollow","setCurrentPage","pageNumber","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","pageClass","page","activePage","User","user","userPhoto","photos","small","disabled","some","userInfo","userLocation","Users","usersContainer","Preloader","preloader","style","width","getUsersSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","React","mapDispatchToProps","totalCount","bind","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","deactivateEditMode","updateStatus","onDoubleClick","onBlur","onKeyPress","e","key","onChange","currentTarget","autoFocus","ProfileInfo","profile","descriptionBlock","large","fullName","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profileReducer","newPost","postId","Post","MyPosts","memo","console","log","postElements","postsBlock","AddPostReduxForm","addPost","MyPostsContainer","profilePage","Profile","ProfileContainer","Number","match","params","authorizedUserId","history","showUserProfile","getStatus","withRouter","Header","header","loginBlock","login","logout","SET_USER_DATA","setAuthUserData","payload","getAuth","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","sidebarReducer","INITIALIZED_SUCCESS","initialized","appReducer","rootReducer","combineReducers","formReducer","app","middlewareEnhancer","applyMiddleware","thunkMiddleware","composedEnhancers","composeWithDevTools","store","createStore","window","App","initializeApp","render","DialogsContainer","AppContainer","promise","Promise","all","MainApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f7488072.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"Nav_navContainer__2S3Ft\",\"nav\":\"Nav_nav__cuals\",\"item\":\"Nav_item__2k723\",\"active\":\"Nav_active__2ew0P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__2ul14\",\"user\":\"Users_user__2jCuU\",\"userPhoto\":\"Users_userPhoto__3SQpR\",\"avatar\":\"Users_avatar__38AtL\",\"status\":\"Users_status__2d0o4\",\"userName\":\"Users_userName__1nlAm\",\"userLocation\":\"Users_userLocation__-BNuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__15v-t\",\"dialogItems\":\"Dialogs_dialogItems__1dXZ2\",\"dialog\":\"Dialogs_dialog__2MkRK\",\"messages\":\"Dialogs_messages__2g7Bj\",\"active\":\"Dialogs_active___A4O3\",\"message\":\"Dialogs_message__17PX9\",\"sendMessage\":\"Dialogs_sendMessage___xD_4\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport s from \"./Friends.module.css\"\r\nimport {FriendType} from \"../../redux/sidebar-reducer\";\r\n\r\ntype FriendsPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst Friends:React.FC<FriendsPropsType> = (props) => {\r\n    const avatar = props.friends.map(f => {\r\n        const activeClass = f.isOnline?s.active:''\r\n        return <div key={f.id}>\r\n            <div className={`${s.avatar} ${activeClass}`}><img src={f.img} alt={\"User \"+f.name}/></div>\r\n            <div className={s.userName}>{f.name}</div>\r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={s.avatarContainer}>{avatar}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport s from \"./Nav.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"../Friends/Friends\";\r\nimport {FriendType} from \"../../redux/sidebar-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Nav: React.FC<MapStateToPropsType> = (props) => {\r\n    return <div className={s.navContainer}>\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <Friends friends={props.friends}/>\r\n    </div>\r\n\r\n};\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    friends: state.sidebar.friends\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Nav);\r\n","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n  return <div>News News News</div>;\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = () => {\r\n    return <div>Settings</div>;\r\n};\r\n\r\nexport default Settings;","export type InitialStateType = {\r\n    dialogs: DialogType[]\r\n    messages: MessageType[]\r\n}\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst ADD_MESSAGE = \"/dialogs/ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Victor\"},\r\n        {id: 3, name: \"Bob\"},\r\n        {id: 4, name: \"John\"},\r\n        {id: 5, name: \"Anna\"},\r\n        {id: 6, name: \"Dennis\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"How are you?\"},\r\n        {id: 2, message: \"Are you busy now?\"},\r\n        {id: 3, message: \"Today I have a party:)\"},\r\n        {id: 4, message: \"Can you help me with code review today?\"},\r\n        {id: 5, message: \"Are you going to gim today?\"},\r\n    ],\r\n}\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessageType = {\r\n                id: 6,\r\n                message: action.newMessage,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ActionsType =\r\n    | AddMessageActionType\r\n\r\nexport type AddMessageActionType = ReturnType<typeof addMessageActionCreator>\r\n\r\nexport const\r\n    addMessageActionCreator = (newMessage:string) => ({type: ADD_MESSAGE,newMessage} as const)\r\n\r\n\r\nexport default dialogsReducer","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\n/*\r\n********* class component *********\r\nexport const withAuthRedirect=(Component:any)=>{\r\n    class RedirectComponent extends React.Component<any, any>{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to= {\"/login\"}/>\r\n                return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return RedirectComponent\r\n}*/\r\n\r\ntype MapStateToPropsForRedirect={\r\n    isAuth:boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state:AppStateType):MapStateToPropsForRedirect => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent=(props: MapStateToPropsForRedirect)=> {\r\n        let {isAuth,...restProps}=props\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\ntype FormControlsPropsType = {\r\n    input: any\r\n    meta: any\r\n    children: any\r\n}\r\nconst FormControl: React.FC<FormControlsPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<any> = (props: any) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const Input: React.FC<any> = (props: any) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps} className={s.input}/>\r\n    </FormControl>\r\n};\r\n\r\n\r\nexport const createField = (placeholder: string, name: string, component: any, validators: Array<any>, props = {}, text: string = \"\", wrapperClass: any = null, fieldClass: any = null) =>\r\n    <div className={wrapperClass}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n               className={fieldClass}/>\r\n        {text}\r\n    </div>\r\n\r\n\r\n","export const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number)=>(value: string) => {\r\n    if (value&&value.length>maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n\r\nexport const minLengthCreator = (minLength:number)=>(value: string) => {\r\n    if (value&&value.length<minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../FormControls/FormControls\";\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst maxLength10 = maxLengthCreator(10)\nconst minLength5 = minLengthCreator(5)\n\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\n    let dialogsElements = props.dialogsPage.dialogs.map((d) => (\n        <DialogItem key={d.id} name={d.name} id={d.id}/>\n    ));\n    let messagesElements = props.dialogsPage.messages.map((m) => (\n        <Message message={m.message} key={m.id}/>\n    ));\n\n    /*   const onAddMessage = () => props.addMessage();\n       const onMessageTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n           const text = e.currentTarget.value;\n           props.updateNewMessageText(text);\n       };\n   */\n\n    const onSubmit = (formData: AddMessageType) => {\n        props.addMessage(formData.message)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>{dialogsElements}</div>\n            <div className={s.messages}>\n                {messagesElements}\n                <div className={s.sendMessage}>\n                    <AddMessageReduxForm\n                        onSubmit={onSubmit}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\ntype AddMessageType = {\n    message: string\n}\n\n\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    name=\"message\"\n                    component={Textarea}\n                    validate={[required, maxLength10, minLength5]}\n                    placeholder=\"Write a message\"\n                />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm<AddMessageType>({form: 'dialogsAddMessage'})(AddMessageForm)\nexport default Dialogs;\n","import {\r\n    addMessageActionCreator,\r\n    InitialStateType,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n\r\n\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (message:string) => void,\r\n}\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessage: (message:string) => {\r\n            dispatch(addMessageActionCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect) (Dialogs)","import axios from \"axios\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\nimport {ProfileType} from \"../redux/profile-reducer\";\r\n\r\n\r\ntype GetUserResponseType = {\r\n    items: UserType[]\r\n    error: string | null\r\n    totalCount: number\r\n}\r\n\r\ntype FollowResponseType = {\r\n    data: any\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\ntype AuthLoginResponceType = {\r\n    data: any\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\ntype GetProfileResponseType = ProfileType\r\n\r\ntype AuthMeResponseType = {\r\n    data: {\r\n        id: string | null\r\n        login: string\r\n        email: string\r\n    }\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\ntype UpdateStatusResponseType = {\r\n    data: any\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"73fdf213-e363-4a31-ad92-85b5d437ac0f\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetUserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<FollowResponseType>(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete<FollowResponseType>(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<GetProfileResponseType>(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<UpdateStatusResponseType>(`profile/status`, {status: status})\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<AuthMeResponseType>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<AuthLoginResponceType>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<AuthLoginResponceType>(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}","export const  updateObjectInArray=(items:any,itemId:any,objPropName:any,newObjProps:any)=>{\r\n   return items.map((u: any ) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\"\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nexport type InitialStateType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nconst FOLLOW = \"/users/FOLLOW\";\r\nconst UNFOLLOW = \"/users/UNFOLLOW\";\r\nconst SET_USERS = \"/users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"/users/SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"/users/TOGGLE_IS_FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"/users/TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nconst initialState = {\r\n    users: [\r\n        /* {\r\n             id: 1,\r\n             fullName: \"Kate\",\r\n             photoUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS5dMYMr1CCTycSQd2YQatl4bvzK5T90Renlw&usqp=CAU\",\r\n             status: \"I am looking for new job\",\r\n             followed: true,\r\n             location: {city: \"New York\", country: \"USA\"}\r\n         },\r\n         {\r\n             id: 2,\r\n             fullName: \"John\",\r\n             photoUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8wvbPOt0gK-5yGATP1Beo7Mkk7LT1M6KZLw&usqp=CAU\",\r\n             status: \"I am moved to new office\",\r\n             followed: true,\r\n             location: {city: \"London\", country: \"Great Britain\"}\r\n         },\r\n         {\r\n             id: 3,\r\n             fullName: \"Bob\",\r\n             photoUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbz8f-cdfPQtfH1EP3x1V2pMDyLpDMmuzKbg&usqp=CAU\",\r\n             status: \"Happiest ever\",\r\n             followed: false,\r\n             location: {city: \"Melbourne\", country: \"Australia\"}\r\n         },*/\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [20416]\r\n\r\n}\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*     users: state.users.map(u => {\r\n                         if (u.id === action.userId) {\r\n                             return {...u, followed: true}\r\n                         }\r\n                         return u\r\n                     })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                /* users: state.users.map(u => {\r\n                     if (u.id === action.userId) {\r\n                         return {...u, followed: false}\r\n                     }\r\n                     return u\r\n                 })*/\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport  type UsersActionsType =\r\n    FollowActionType\r\n    | UnFollowActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | ToggleIsFetchingActionType\r\n    | ToggleFollowingProgress\r\n\r\nexport type FollowActionType = ReturnType<typeof acceptFollow>\r\nexport type UnFollowActionType = ReturnType<typeof acceptUnFollow>\r\nexport type SetUsersActionType = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleFollowingProgress = ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport const acceptFollow = (userId: number) => ({type: FOLLOW, userId} as const)\r\nexport const acceptUnFollow = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsers = (users: UserType[]) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (pageNumber: number) => ({type: SET_CURRENT_PAGE, pageNumber} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\n\r\n\r\n//thunk\r\nexport const requestUsers = (currentPage: number, pageSize: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n        // dispatch(setTotalUsersCount(300))\r\n    }\r\n\r\nconst followUnfollowFlow = async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unFollow = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n        let apiMethod = usersAPI.unFollow.bind(usersAPI)\r\n        followUnfollowFlow(dispatch, userId, apiMethod, acceptUnFollow)\r\n    }\r\n\r\nexport const follow = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI)\r\n        followUnfollowFlow(dispatch, userId, apiMethod, acceptFollow)\r\n    }\r\n\r\n\r\nexport default usersReducer","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\"\r\n\r\nexport type PaginatorPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize: number\r\n}\r\nconst Paginator: React.FC<PaginatorPropsType> = ({\r\n                                                     onPageChanged,\r\n                                                     totalUsersCount,\r\n                                                     pageSize,\r\n                                                     currentPage,\r\n                                                     portionSize\r\n                                                 }) => {\r\n\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber((portionNumber - 1))}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    const pageClass = s.page + ' ' + (currentPage === p ? s.activePage : '')\r\n                    return <span key={p} className={pageClass}\r\n                                 onClick={() => onPageChanged(p)}>{p}</span>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber((portionNumber + 1))}>NEXT</button>}\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Paginator","export default __webpack_public_path__ + \"static/media/user.d874ab6f.png\";","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"./../../assets/images/user.png\"\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n\r\n}\r\nconst User: React.FC<UserPropsType> = ({user, followingInProgress, follow, unFollow}) => {\r\n    return <div key={user.id} className={s.user}>\r\n        <div className={s.avatar}>\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <div className={s.userPhoto}><img src={user.photos.small ? user.photos.small : userPhoto}\r\n                                                  alt=\"user\"/></div>\r\n            </NavLink>\r\n            <div>\r\n                {user.followed\r\n                    ? <button onClick={() => {\r\n                        unFollow(user.id)\r\n                    }}\r\n                              disabled={followingInProgress.some(id => id === user.id)}>\r\n                        UnFollow</button>\r\n                    : <button onClick={() => {\r\n                        follow(user.id)\r\n                    }}\r\n                              disabled={followingInProgress.some(id => id === user.id)}>Follow</button>}\r\n            </div>\r\n        </div>\r\n        <div className={s.userInfo}>\r\n            <div className={s.userName}>{user.name}</div>\r\n            <div className={s.status}>{user.status}</div>\r\n        </div>\r\n        <div className={s.userLocation}>\r\n            <span>{\"user.location.country\"}</span>\r\n            <span>{\"user.location.city\"}</span>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {UsersContainerPropsType} from \"./UsersContainer\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nexport type UsersPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n}\r\nconst Users: React.FC<UsersContainerPropsType & UsersPropsType> = ({\r\n                                                                       currentPage,\r\n                                                                       pageSize,\r\n                                                                       onPageChanged,\r\n                                                                       totalUsersCount,\r\n                                                                       users,\r\n                                                                       ...props\r\n                                                                   }) => {\r\n    return <div className={s.usersContainer}>\r\n        <div className={s.users}>\r\n            <Paginator onPageChanged={onPageChanged}\r\n                       totalUsersCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       portionSize={10}/>\r\n            {\r\n                users.map(u => <User key={u.id} user={u} followingInProgress={props.followingInProgress}\r\n                                     follow={props.follow} unFollow={props.unFollow}/>)\r\n            }\r\n\r\n        </div>\r\n        <button>Show More</button>\r\n    </div>\r\n}\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/Interwind-1.5s-367px.59830f26.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/loader/Interwind-1.5s-367px.svg\";\r\n\r\n\r\nconst Preloader:React.FC=()=>{\r\n    return <div>\r\n        <img src={preloader} alt=\"loader\" style={{width:'100%'}}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","import { createSelector } from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {UserType} from \"./users-reducer\";\r\n\r\n const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users: Array<UserType>) => {\r\n    return users.filter((u: UserType) => true)\r\n})\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    acceptFollow,\r\n    acceptUnFollow,\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    unFollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n        this.props.setCurrentPage(pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : null\r\n            }\r\n            <Users {...this.props}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}/>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    acceptFollow: (userId: number) => void\r\n    acceptUnFollow: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n}\r\n\r\nexport type UsersContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    acceptFollow,\r\n    acceptUnFollow,\r\n    setCurrentPage,\r\n    requestUsers,\r\n    follow,\r\n    unFollow\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps))(UsersContainer)\r\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from 'react';\r\n\r\nexport type ProfileStatusPropTypes = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n};\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusPropTypes> = (props) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode=()=>setEditMode(true)\r\n    const deactivateEditMode=()=> {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onEnterHandler=(e:KeyboardEvent<HTMLInputElement>)=>{\r\n        if(e.key===\"Enter\"){\r\n            deactivateEditMode()\r\n        }\r\n    }\r\n\r\n    const onStatusChangeHandler=(e:ChangeEvent<HTMLInputElement>)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || '---'}</span>\r\n            </div>}\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onBlur={deactivateEditMode}\r\n                       onKeyPress={onEnterHandler}\r\n                       onChange={onStatusChangeHandler}\r\n                       value={status}\r\n                       autoFocus/>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nexport type ProfileInfoPropsType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src=\"https://s27389.pcdn.co/wp-content/uploads/2019/12/why-network-segmentation-essential-enterprise-1024x440.jpeg\"\r\n                    alt=\"\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.avatar}\r\n                     src={profile.photos.large ? profile.photos.large : userPhoto}\r\n                     alt={\"User avatar\" + profile.fullName}/>\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default ProfileInfo","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type InitialStateType = {\r\n    posts: PostType[]\r\n    profile: null | ProfileType\r\n    status: string\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        github: string | null\r\n        instagram: string | null\r\n        mainLink: string | null\r\n        twitter: string | null\r\n        vk: string | null\r\n        website: string | null\r\n        youtube: string | null\r\n    }\r\n    fullName: string | null\r\n    lookingForAJob: boolean | null\r\n    lookingForAJobDescription: string | null\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    userId: number\r\n}\r\nconst ADD_POST = \"/profile/ADD-POST\";\r\nconst SET_USER_PROFILE = \"/profile/SET-USER-PROFILE\";\r\nconst SET_STATUS = \"/profile/SET-STATUS\";\r\nconst DELETE_POST = \"/profile/DELETE-POST\"\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: \"How are you?\", likesCount: 19},\r\n        {id: 2, message: \"Where have you been?\", likesCount: 3},\r\n        {id: 3, message: \"Pics from our party yesterday\", likesCount: 8},\r\n        {id: 4, message: \"How important is to be proactive?\", likesCount: 27},\r\n        {id: 5, message: \"What are your goals for today, for this week?\", likesCount: 54},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\nconst profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: 6,\r\n                message: action.text,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts].filter(p => p.id !== action.postId)\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ProfileActionsType =\r\n    AddPostActionType\r\n    | SetUserProfileActionType\r\n    | SetStatusActionType\r\n    | DeletePostActionType\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPost>\r\nexport type DeletePostActionType = ReturnType<typeof deletePost>\r\nexport type SetUserProfileActionType = ReturnType<typeof setUserProfile>\r\nexport type SetStatusActionType = ReturnType<typeof setStatus>\r\n\r\nexport const addPost = (text: string) => ({type: ADD_POST, text} as const)\r\n\r\nexport const deletePost = (postId: number) => ({type: DELETE_POST, postId} as const)\r\n\r\nexport const setUserProfile = (profile: ProfileType) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n} as const)\r\n\r\nexport const setStatus = (status: string) => ({\r\n    type: SET_STATUS,\r\n    status\r\n} as const)\r\n\r\n\r\n// thunk\r\n\r\nexport const showUserProfile = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ProfileActionsType>) => {\r\n        let response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response))\r\n    }\r\n\r\nexport const getStatus = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ProfileActionsType>) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response))\r\n    }\r\n\r\nexport const updateStatus = (status: string) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ProfileActionsType>) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n\r\n\r\nexport default profileReducer","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype postPropsType={\r\n    message:string\r\n    likesCount:number\r\n}\r\nconst Post = (props:postPropsType) => {\r\n    return <div className={s.posts}>\r\n        <div className={s.item}><img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQvQ4aNPrI7S0ZcOI0gguCobJyLVkc7osIoaQ&usqp=CAU\"\r\n            alt=\"\"/>{props.message}\r\n        </div>\r\n        <div><span>Like</span><span> {props.likesCount}</span></div>\r\n    </div>\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst minLength5 = minLengthCreator(5)\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = React.memo((props) => {\r\n    console.log(\"render Posts\")\r\n    const postElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}\r\n                                                                key={p.id}/>)\r\n\r\n    const onSubmit = (formData: AddPostType) => {\r\n        props.addPost(formData.post)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <AddPostReduxForm\r\n                onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype AddPostType = {\r\n    post: string\r\n}\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"post\"\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10, minLength5]}\r\n                       placeholder='Enter your thoughts'/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm<AddPostType>({form: 'postsAddPost'})(AddPostForm)\r\n\r\n\r\nexport default MyPosts","import {addPost, PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: PostType[]\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPost: (post:string) => void,\r\n}\r\n\r\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getStatus, ProfileType, showUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component<ProfilePropsType> {\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = Number(this.props.authorizedUserId)\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.showUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render Profile\")\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    authorizedUserId: string | null,\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    showUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype MatchParamsType = {\r\n    userId: string\r\n}\r\nexport type ProfilePropsType =\r\n    RouteComponentProps<MatchParamsType>\r\n    & MapStateToPropsType\r\n    & MapDispatchToPropsType\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    console.log(\"mstp ProfileContainer\")\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {showUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)\r\n(ProfileContainer)\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='http://www.logobook.com/wp-content/uploads/2016/10/Community_Builders_and_Building_Materials_logo.svg'\r\n             alt='logo'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <>\r\n                        <div className={s.userName}>{props.login}</div>\r\n                        <button onClick={props.logout} className={s.logout}>Log out</button>\r\n                </>\r\n                : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"/auth/SET-USER-DATA\";\r\n\r\nexport type InitialStateType = {\r\n    userId: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport  type AuthActionsType =\r\n    SetUserDataActionType\r\n\r\n\r\nexport type SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const setAuthUserData = (userId: null | string, email: null | string, login: null | string, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n} as const)\r\n\r\n//thunk\r\n\r\nexport const getAuth = () =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, AuthActionsType>) => {\r\n        let response = await authAPI.authMe()\r\n        if (response.resultCode === 0) {\r\n            let {id, email, login} = response.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, FormAction>) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuth())\r\n        } else {\r\n            let message = response.messages.length > 0 ? response.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, AuthActionsType>) => {\r\n        let response=await authAPI.logout()\r\n            if (response.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n    }\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth, logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (userId: null | string, email: null | string, login: null | string,isAuth:boolean) => void\r\n    getAuth:()=>void\r\n    logout:()=>void\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport type HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData,getAuth,logout})(HeaderContainer)","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../FormControls/FormControls\";\r\nimport {minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../FormControls/FormControls.module.css\"\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst minLength5 = minLengthCreator(5)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", Input, [required, minLength5])}\r\n            {createField(\"Password\", \"password\", Input, [required, minLength5], {type: \"password\"})}\r\n            {createField(\"\", \"rememberMe\", Input, [], {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error &&\r\n            <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype LoginPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","\r\nexport type SidebarType={\r\n    friends:FriendType[]\r\n}\r\nexport type InitialStateType={\r\n    friends:FriendType[]\r\n}\r\nexport type FriendType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n    isOnline: boolean\r\n}\r\n\r\nlet initialState={\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: \"Bob\",\r\n            img: \"https://images.unsplash.com/photo-1600603955656-e3c9e1ad7f64?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n            isOnline: true\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Kate\",\r\n            img: \"https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n            isOnline: false\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"John\",\r\n            img: \"https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n            isOnline: true\r\n        }\r\n\r\n    ] as Array<FriendType>\r\n}\r\nconst sidebarReducer=(state:InitialStateType=initialState, action:any):InitialStateType=>{\r\n    return state\r\n}\r\n\r\nexport  default  sidebarReducer","import {AppStateType} from \"./redux-store\";\r\nimport {getAuth} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport  type AppActionsType =\r\n    InitializedSuccessActionType\r\n\r\n\r\nexport type InitializedSuccessActionType = ReturnType<typeof initializedSuccess>\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,} as const)\r\n\r\n//thunk\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch: ThunkDispatch<AppStateType, unknown, AppActionsType>) => {\r\n        let promise = dispatch(getAuth())\r\n       /* promise.then(()=>{\r\n            dispatch(initializedSuccess())\r\n        })*/\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess());\r\n            });\r\n    }\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form:formReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst middlewareEnhancer = applyMiddleware(thunkMiddleware)\r\nconst composedEnhancers = composeWithDevTools(middlewareEnhancer)\r\n\r\nlet store = createStore(rootReducer, composedEnhancers)\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path=\"/dialogs\" render={() =>\r\n                        <DialogsContainer/>}/>\r\n                    <Route path=\"/profile/:userId?\" render={() =>\r\n                        <ProfileContainer/>}/>\r\n                    <Route path=\"/users\" render={() =>\r\n                        <UsersContainer/>}/>\r\n                    <Route path=\"/login\" render={() =>\r\n                        <Login/>}/>\r\n                    <Route path=\"/news\" component={News}/>\r\n                    <Route path=\"/music\" component={Music}/>\r\n                    <Route path=\"/settings\" component={Settings}/>\r\n                    {/*<Redirect to=\"/profile\"/>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: any\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\ntype AppPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport const AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n\r\nexport const MainApp = () => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default MainApp","import reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport {MainApp} from \"./App\";\r\n\r\nReactDOM.render(\r\n       <MainApp/>,\r\n        document.getElementById('root')\r\n    )\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1N5L2\",\"input\":\"FormControls_input__3Vrmx\",\"error\":\"FormControls_error__2a_M6\",\"formSummaryError\":\"FormControls_formSummaryError__3gXXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarContainer\":\"Friends_avatarContainer__2hxxm\",\"avatar\":\"Friends_avatar__1Svic\",\"active\":\"Friends_active__3fA9r\",\"userName\":\"Friends_userName__2TtBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__SVvlg\",\"loginBlock\":\"Header_loginBlock__1jZ8_\",\"userName\":\"Header_userName__36o3F\",\"logout\":\"Header_logout__2u8cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__dD0Zg\",\"page\":\"Paginator_page__3mmLg\",\"activePage\":\"Paginator_activePage__1Az0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__3HJco\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Zh1WA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__VkIMX\",\"posts\":\"MyPosts_posts__2LCKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__VpuLr\"};"],"sourceRoot":""}
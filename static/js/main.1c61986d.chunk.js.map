{"version":3,"sources":["assets/images/user.png","redux/dialogs-reducer.ts","components/Nav/Nav.module.css","api/api.ts","components/Users/Users.module.css","reportWebVitals.ts","components/Friends/Friends.tsx","components/Nav/Nav.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/object-helpers.ts","redux/users-reducer.ts","common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","App.tsx","index.tsx","components/FormControls/FormControls.tsx","assets/loader/Interwind-1.5s-367px.svg","common/Preloader/Preloader.tsx","components/FormControls/FormControls.module.css","components/Friends/Friends.module.css","components/Header/Header.module.css","utils/validators/validators.ts","common/Paginator/Paginator.module.css","redux/profile-reducer.ts"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessage","type","dialogsReducer","state","action","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unFollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","authMe","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Friends","props","avatar","friends","map","f","activeClass","isOnline","s","active","className","src","img","alt","userName","avatarContainer","connect","sidebar","navContainer","nav","item","to","activeClassName","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","acceptFollow","acceptUnFollow","setCurrentPage","pageNumber","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","pageClass","page","activePage","User","user","userPhoto","photos","small","disabled","some","userInfo","userLocation","Users","usersContainer","getUsersSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","mapDispatchToProps","totalCount","bind","compose","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuth","authReducer","HeaderContainer","auth","minLength5","minLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","formSummaryError","length","stopSubmit","_error","formData","sidebarReducer","INITIALIZED_SUCCESS","initialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","middlewareEnhancer","applyMiddleware","thunkMiddleware","composedEnhancers","composeWithDevTools","store","createStore","window","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","component","AppContainer","withRouter","promise","Promise","all","MainApp","basename","process","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","placeholder","validators","text","wrapperClass","fieldClass","validate","preloader","style","width","value","maxLengthCreator","maxLength","minLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPost","setStatus","showUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.1c61986d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.d874ab6f.png\";","export type InitialStateType = {\r\n    dialogs: DialogType[]\r\n    messages: MessageType[]\r\n}\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst ADD_MESSAGE = \"/dialogs/ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Victor\"},\r\n        {id: 3, name: \"Bob\"},\r\n        {id: 4, name: \"John\"},\r\n        {id: 5, name: \"Anna\"},\r\n        {id: 6, name: \"Dennis\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"How are you?\"},\r\n        {id: 2, message: \"Are you busy now?\"},\r\n        {id: 3, message: \"Today I have a party:)\"},\r\n        {id: 4, message: \"Can you help me with code review today?\"},\r\n        {id: 5, message: \"Are you going to gim today?\"},\r\n    ],\r\n}\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            const newMessage: MessageType = {\r\n                id: 6,\r\n                message: action.newMessage,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type ActionsType =\r\n    | AddMessageActionType\r\n\r\nexport type AddMessageActionType = ReturnType<typeof addMessageActionCreator>\r\n\r\nexport const\r\n    addMessageActionCreator = (newMessage:string) => ({type: ADD_MESSAGE,newMessage} as const)\r\n\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"Nav_navContainer__2S3Ft\",\"nav\":\"Nav_nav__cuals\",\"item\":\"Nav_item__2k723\",\"active\":\"Nav_active__2ew0P\"};","import axios from \"axios\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\nimport {ProfileType} from \"../redux/profile-reducer\";\r\n\r\n\r\ntype GetUserResponseType = {\r\n    items: UserType[]\r\n    error: string | null\r\n    totalCount: number\r\n}\r\n\r\ntype FollowResponseType = {\r\n    data: any\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\ntype AuthLoginResponceType = {\r\n    data: any\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\ntype GetProfileResponseType = ProfileType\r\n\r\ntype AuthMeResponseType = {\r\n    data: {\r\n        id: string | null\r\n        login: string\r\n        email: string\r\n    }\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\ntype UpdateStatusResponseType = {\r\n    data: any\r\n    messages: string[]\r\n    resultCode: 0 | 1\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"73fdf213-e363-4a31-ad92-85b5d437ac0f\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetUserResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<FollowResponseType>(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete<FollowResponseType>(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<GetProfileResponseType>(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<UpdateStatusResponseType>(`profile/status`, {status: status})\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get<AuthMeResponseType>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<AuthLoginResponceType>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<AuthLoginResponceType>(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__2ul14\",\"user\":\"Users_user__2jCuU\",\"userPhoto\":\"Users_userPhoto__3SQpR\",\"avatar\":\"Users_avatar__38AtL\",\"status\":\"Users_status__2d0o4\",\"userName\":\"Users_userName__1nlAm\",\"userLocation\":\"Users_userLocation__-BNuJ\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport s from \"./Friends.module.css\"\r\nimport {FriendType} from \"../../redux/sidebar-reducer\";\r\n\r\ntype FriendsPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nconst Friends:React.FC<FriendsPropsType> = (props) => {\r\n    const avatar = props.friends.map(f => {\r\n        const activeClass = f.isOnline?s.active:''\r\n        return <div key={f.id}>\r\n            <div className={`${s.avatar} ${activeClass}`}><img src={f.img} alt={\"User \"+f.name}/></div>\r\n            <div className={s.userName}>{f.name}</div>\r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={s.avatarContainer}>{avatar}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport s from \"./Nav.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"../Friends/Friends\";\r\nimport {FriendType} from \"../../redux/sidebar-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Nav: React.FC<MapStateToPropsType> = (props) => {\r\n    return <div className={s.navContainer}>\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <Friends friends={props.friends}/>\r\n    </div>\r\n\r\n};\r\ntype MapStateToPropsType = {\r\n    friends: FriendType[]\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    friends: state.sidebar.friends\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Nav);\r\n","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n  return <div>News News News</div>;\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = () => {\r\n    return <div>Settings</div>;\r\n};\r\n\r\nexport default Settings;","export const  updateObjectInArray=(items:any,itemId:any,objPropName:any,newObjProps:any)=>{\r\n   return items.map((u: any ) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\"\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nexport type InitialStateType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    status: string\r\n    followed: boolean\r\n    location: LocationType\r\n}\r\n\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nconst FOLLOW = \"/users/FOLLOW\";\r\nconst UNFOLLOW = \"/users/UNFOLLOW\";\r\nconst SET_USERS = \"/users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"/users/SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"/users/TOGGLE_IS_FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"/users/TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nconst initialState = {\r\n    users: [\r\n        /* {\r\n             id: 1,\r\n             fullName: \"Kate\",\r\n             photoUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS5dMYMr1CCTycSQd2YQatl4bvzK5T90Renlw&usqp=CAU\",\r\n             status: \"I am looking for new job\",\r\n             followed: true,\r\n             location: {city: \"New York\", country: \"USA\"}\r\n         },\r\n         {\r\n             id: 2,\r\n             fullName: \"John\",\r\n             photoUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8wvbPOt0gK-5yGATP1Beo7Mkk7LT1M6KZLw&usqp=CAU\",\r\n             status: \"I am moved to new office\",\r\n             followed: true,\r\n             location: {city: \"London\", country: \"Great Britain\"}\r\n         },\r\n         {\r\n             id: 3,\r\n             fullName: \"Bob\",\r\n             photoUrl:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbz8f-cdfPQtfH1EP3x1V2pMDyLpDMmuzKbg&usqp=CAU\",\r\n             status: \"Happiest ever\",\r\n             followed: false,\r\n             location: {city: \"Melbourne\", country: \"Australia\"}\r\n         },*/\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [20416]\r\n\r\n}\r\nconst usersReducer = (state: InitialStateType = initialState, action: UsersActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*     users: state.users.map(u => {\r\n                         if (u.id === action.userId) {\r\n                             return {...u, followed: true}\r\n                         }\r\n                         return u\r\n                     })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                /* users: state.users.map(u => {\r\n                     if (u.id === action.userId) {\r\n                         return {...u, followed: false}\r\n                     }\r\n                     return u\r\n                 })*/\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport  type UsersActionsType =\r\n    FollowActionType\r\n    | UnFollowActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | ToggleIsFetchingActionType\r\n    | ToggleFollowingProgress\r\n\r\nexport type FollowActionType = ReturnType<typeof acceptFollow>\r\nexport type UnFollowActionType = ReturnType<typeof acceptUnFollow>\r\nexport type SetUsersActionType = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleFollowingProgress = ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport const acceptFollow = (userId: number) => ({type: FOLLOW, userId} as const)\r\nexport const acceptUnFollow = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsers = (users: UserType[]) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (pageNumber: number) => ({type: SET_CURRENT_PAGE, pageNumber} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\n\r\n\r\n//thunk\r\nexport const requestUsers = (currentPage: number, pageSize: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n        // dispatch(setTotalUsersCount(300))\r\n    }\r\n\r\nconst followUnfollowFlow = async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unFollow = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n        let apiMethod = usersAPI.unFollow.bind(usersAPI)\r\n        followUnfollowFlow(dispatch, userId, apiMethod, acceptUnFollow)\r\n    }\r\n\r\nexport const follow = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, UsersActionsType>) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI)\r\n        followUnfollowFlow(dispatch, userId, apiMethod, acceptFollow)\r\n    }\r\n\r\n\r\nexport default usersReducer","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\"\r\n\r\nexport type PaginatorPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize: number\r\n}\r\nconst Paginator: React.FC<PaginatorPropsType> = ({\r\n                                                     onPageChanged,\r\n                                                     totalUsersCount,\r\n                                                     pageSize,\r\n                                                     currentPage,\r\n                                                     portionSize\r\n                                                 }) => {\r\n\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber((portionNumber - 1))}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    const pageClass = s.page + ' ' + (currentPage === p ? s.activePage : '')\r\n                    return <span key={p} className={pageClass}\r\n                                 onClick={() => onPageChanged(p)}>{p}</span>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber((portionNumber + 1))}>NEXT</button>}\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"./../../assets/images/user.png\"\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n\r\n}\r\nconst User: React.FC<UserPropsType> = ({user, followingInProgress, follow, unFollow}) => {\r\n    return <div key={user.id} className={s.user}>\r\n        <div className={s.avatar}>\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <div className={s.userPhoto}><img src={user.photos.small ? user.photos.small : userPhoto}\r\n                                                  alt=\"user\"/></div>\r\n            </NavLink>\r\n            <div>\r\n                {user.followed\r\n                    ? <button onClick={() => {\r\n                        unFollow(user.id)\r\n                    }}\r\n                              disabled={followingInProgress.some(id => id === user.id)}>\r\n                        UnFollow</button>\r\n                    : <button onClick={() => {\r\n                        follow(user.id)\r\n                    }}\r\n                              disabled={followingInProgress.some(id => id === user.id)}>Follow</button>}\r\n            </div>\r\n        </div>\r\n        <div className={s.userInfo}>\r\n            <div className={s.userName}>{user.name}</div>\r\n            <div className={s.status}>{user.status}</div>\r\n        </div>\r\n        <div className={s.userLocation}>\r\n            <span>{\"user.location.country\"}</span>\r\n            <span>{\"user.location.city\"}</span>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {UsersContainerPropsType} from \"./UsersContainer\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nexport type UsersPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n}\r\nconst Users: React.FC<UsersContainerPropsType & UsersPropsType> = ({\r\n                                                                       currentPage,\r\n                                                                       pageSize,\r\n                                                                       onPageChanged,\r\n                                                                       totalUsersCount,\r\n                                                                       users,\r\n                                                                       ...props\r\n                                                                   }) => {\r\n    return <div className={s.usersContainer}>\r\n        <div className={s.users}>\r\n            <Paginator onPageChanged={onPageChanged}\r\n                       totalUsersCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       portionSize={10}/>\r\n            {\r\n                users.map(u => <User key={u.id} user={u} followingInProgress={props.followingInProgress}\r\n                                     follow={props.follow} unFollow={props.unFollow}/>)\r\n            }\r\n\r\n        </div>\r\n        <button>Show More</button>\r\n    </div>\r\n}\r\n\r\nexport default Users","import { createSelector } from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {UserType} from \"./users-reducer\";\r\n\r\n const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users: Array<UserType>) => {\r\n    return users.filter((u: UserType) => true)\r\n})\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    acceptFollow,\r\n    acceptUnFollow,\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    unFollow,\r\n    UserType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n        this.props.setCurrentPage(pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : null\r\n            }\r\n            <Users {...this.props}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}/>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    acceptFollow: (userId: number) => void\r\n    acceptUnFollow: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n}\r\n\r\nexport type UsersContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    acceptFollow,\r\n    acceptUnFollow,\r\n    setCurrentPage,\r\n    requestUsers,\r\n    follow,\r\n    unFollow\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps))(UsersContainer)\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='http://www.logobook.com/wp-content/uploads/2016/10/Community_Builders_and_Building_Materials_logo.svg'\r\n             alt='logo'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <>\r\n                        <div className={s.userName}>{props.login}</div>\r\n                        <button onClick={props.logout} className={s.logout}>Log out</button>\r\n                </>\r\n                : <NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"/auth/SET-USER-DATA\";\r\n\r\nexport type InitialStateType = {\r\n    userId: null | string\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nconst authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport  type AuthActionsType =\r\n    SetUserDataActionType\r\n\r\n\r\nexport type SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const setAuthUserData = (userId: null | string, email: null | string, login: null | string, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n} as const)\r\n\r\n//thunk\r\n\r\nexport const getAuth = () =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, AuthActionsType>) => {\r\n        let response = await authAPI.authMe()\r\n        if (response.resultCode === 0) {\r\n            let {id, email, login} = response.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, FormAction>) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuth())\r\n        } else {\r\n            let message = response.messages.length > 0 ? response.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, AuthActionsType>) => {\r\n        let response=await authAPI.logout()\r\n            if (response.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n    }\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth, logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setAuthUserData: (userId: null | string, email: null | string, login: null | string,isAuth:boolean) => void\r\n    getAuth:()=>void\r\n    logout:()=>void\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport type HeaderPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData,getAuth,logout})(HeaderContainer)","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../FormControls/FormControls\";\r\nimport {minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../FormControls/FormControls.module.css\"\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst minLength5 = minLengthCreator(5)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", Input, [required, minLength5])}\r\n            {createField(\"Password\", \"password\", Input, [required, minLength5], {type: \"password\"})}\r\n            {createField(\"\", \"rememberMe\", Input, [], {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error &&\r\n            <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype LoginPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","\r\nexport type SidebarType={\r\n    friends:FriendType[]\r\n}\r\nexport type InitialStateType={\r\n    friends:FriendType[]\r\n}\r\nexport type FriendType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n    isOnline: boolean\r\n}\r\n\r\nlet initialState={\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: \"Bob\",\r\n            img: \"https://images.unsplash.com/photo-1600603955656-e3c9e1ad7f64?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n            isOnline: true\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Kate\",\r\n            img: \"https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n            isOnline: false\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"John\",\r\n            img: \"https://images.unsplash.com/photo-1599566150163-29194dcaad36?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n            isOnline: true\r\n        }\r\n\r\n    ] as Array<FriendType>\r\n}\r\nconst sidebarReducer=(state:InitialStateType=initialState, action:any):InitialStateType=>{\r\n    return state\r\n}\r\n\r\nexport  default  sidebarReducer","import {AppStateType} from \"./redux-store\";\r\nimport {getAuth} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport  type AppActionsType =\r\n    InitializedSuccessActionType\r\n\r\n\r\nexport type InitializedSuccessActionType = ReturnType<typeof initializedSuccess>\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,} as const)\r\n\r\n//thunk\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch: ThunkDispatch<AppStateType, unknown, AppActionsType>) => {\r\n        let promise = dispatch(getAuth())\r\n       /* promise.then(()=>{\r\n            dispatch(initializedSuccess())\r\n        })*/\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess());\r\n            });\r\n    }\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form:formReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst middlewareEnhancer = applyMiddleware(thunkMiddleware)\r\nconst composedEnhancers = composeWithDevTools(middlewareEnhancer)\r\n\r\nlet store = createStore(rootReducer, composedEnhancers)\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import (\"./components/Profile/ProfileContainer\"));\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path=\"/dialogs\" render={() => {\r\n                        return <React.Suspense fallback={<Preloader/>}>\r\n                            <DialogsContainer/>\r\n                        </React.Suspense>\r\n                    }}/>\r\n                    <Route path=\"/profile/:userId?\" render={() => {\r\n                        return <React.Suspense fallback={<Preloader/>}>\r\n                            <ProfileContainer/>\r\n                        </React.Suspense>\r\n                    }}/>\r\n                    <Route path=\"/users\" render={() =>\r\n                        <UsersContainer/>}/>\r\n                    <Route path=\"/login\" render={() =>\r\n                        <Login/>}/>\r\n                    <Route path=\"/news\" component={News}/>\r\n                    <Route path=\"/music\" component={Music}/>\r\n                    <Route path=\"/settings\" component={Settings}/>\r\n                    {/*<Redirect to=\"/profile\"/>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: any\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\ntype AppPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport const AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n\r\nexport const MainApp = () => {\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default MainApp","import reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport {MainApp} from \"./App\";\r\n\r\nReactDOM.render(\r\n       <MainApp/>,\r\n        document.getElementById('root')\r\n    )\r\n\r\nreportWebVitals();\r\n","import React from 'react';\r\nimport s from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\ntype FormControlsPropsType = {\r\n    input: any\r\n    meta: any\r\n    children: any\r\n}\r\nconst FormControl: React.FC<FormControlsPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<any> = (props: any) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n};\r\n\r\nexport const Input: React.FC<any> = (props: any) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps} className={s.input}/>\r\n    </FormControl>\r\n};\r\n\r\n\r\nexport const createField = (placeholder: string, name: string, component: any, validators: Array<any>, props = {}, text: string = \"\", wrapperClass: any = null, fieldClass: any = null) =>\r\n    <div className={wrapperClass}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n               className={fieldClass}/>\r\n        {text}\r\n    </div>\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/Interwind-1.5s-367px.59830f26.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/loader/Interwind-1.5s-367px.svg\";\r\n\r\n\r\nconst Preloader:React.FC=()=>{\r\n    return <div>\r\n        <img src={preloader} alt=\"loader\" style={{width:'100%'}}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1N5L2\",\"input\":\"FormControls_input__3Vrmx\",\"error\":\"FormControls_error__2a_M6\",\"formSummaryError\":\"FormControls_formSummaryError__3gXXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarContainer\":\"Friends_avatarContainer__2hxxm\",\"avatar\":\"Friends_avatar__1Svic\",\"active\":\"Friends_active__3fA9r\",\"userName\":\"Friends_userName__2TtBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__SVvlg\",\"loginBlock\":\"Header_loginBlock__1jZ8_\",\"userName\":\"Header_userName__36o3F\",\"logout\":\"Header_logout__2u8cb\"};","export const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number)=>(value: string) => {\r\n    if (value&&value.length>maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n\r\nexport const minLengthCreator = (minLength:number)=>(value: string) => {\r\n    if (value&&value.length<minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__dD0Zg\",\"page\":\"Paginator_page__3mmLg\",\"activePage\":\"Paginator_activePage__1Az0z\"};","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nexport type InitialStateType = {\r\n    posts: PostType[]\r\n    profile: null | ProfileType\r\n    status: string\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        github: string | null\r\n        instagram: string | null\r\n        mainLink: string | null\r\n        twitter: string | null\r\n        vk: string | null\r\n        website: string | null\r\n        youtube: string | null\r\n    }\r\n    fullName: string | null\r\n    lookingForAJob: boolean | null\r\n    lookingForAJobDescription: string | null\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    userId: number\r\n}\r\nconst ADD_POST = \"/profile/ADD-POST\";\r\nconst SET_USER_PROFILE = \"/profile/SET-USER-PROFILE\";\r\nconst SET_STATUS = \"/profile/SET-STATUS\";\r\nconst DELETE_POST = \"/profile/DELETE-POST\"\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: \"How are you?\", likesCount: 19},\r\n        {id: 2, message: \"Where have you been?\", likesCount: 3},\r\n        {id: 3, message: \"Pics from our party yesterday\", likesCount: 8},\r\n        {id: 4, message: \"How important is to be proactive?\", likesCount: 27},\r\n        {id: 5, message: \"What are your goals for today, for this week?\", likesCount: 54},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\nconst profileReducer = (state: InitialStateType = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: 6,\r\n                message: action.text,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts].filter(p => p.id !== action.postId)\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ProfileActionsType =\r\n    AddPostActionType\r\n    | SetUserProfileActionType\r\n    | SetStatusActionType\r\n    | DeletePostActionType\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPost>\r\nexport type DeletePostActionType = ReturnType<typeof deletePost>\r\nexport type SetUserProfileActionType = ReturnType<typeof setUserProfile>\r\nexport type SetStatusActionType = ReturnType<typeof setStatus>\r\n\r\nexport const addPost = (text: string) => ({type: ADD_POST, text} as const)\r\n\r\nexport const deletePost = (postId: number) => ({type: DELETE_POST, postId} as const)\r\n\r\nexport const setUserProfile = (profile: ProfileType) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n} as const)\r\n\r\nexport const setStatus = (status: string) => ({\r\n    type: SET_STATUS,\r\n    status\r\n} as const)\r\n\r\n\r\n// thunk\r\n\r\nexport const showUserProfile = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ProfileActionsType>) => {\r\n        let response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response))\r\n    }\r\n\r\nexport const getStatus = (userId: number) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ProfileActionsType>) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response))\r\n    }\r\n\r\nexport const updateStatus = (status: string) =>\r\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ProfileActionsType>) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\n\r\n\r\nexport default profileReducer"],"sourceRoot":""}